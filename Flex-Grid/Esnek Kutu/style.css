/* border-box modelini kullanma -- açıklama için https://frontendmasters.github.io/bootcamp/layout#box-model-types'e bakın */
html {
  box-sizing: border-box;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

/* kenar boşluğunu/dolguyu kapat, sayfanın yazı tipini ve boyutunu ayarla */
body {
  font-family: Arial, sans-serif;
  margin: 0;
  padding: 0;
  font-size: 1.5rem;
}

/* madde işaretlerini kapatın, kutuyu sayfanın aşağısına itin, gösteri amacıyla bir kenarlık artı genişlik ve yükseklik ayarlayın. */
ul {
  padding: 0;
  margin: 5rem auto;
  list-style-type: none;
  border: 10px dotted #9b2226;
  display: flex;
  flex-flow: row wrap;
  justify-content: center;
  align-items: center;
  align-content: space-evenly;
}

/* her LI'yi görmek için bir kenarlık ve arka plan rengi ayarladık. Minimum genişlik ve minimum yükseklik, flexbox'ta mutlaka iyi bir fikir değildir, ancak demoda özelliklerin daha iyi çalıştığını görmek için bunlara ihtiyaç vardır. */
li {
  border: 2px solid #001219;
  background-color: #ee9800;
  width: 30%;
  height: 100px;
  display: flex;
  flex-grow: 2;
  order: 1;

}

.flex2 {
  order: 2;
  flex-basis: 25%;
}

/* Flexbox Açıklaması
Aşağıdaki talimatların her biri için bu bildirimleri mevcut ul veya li öğelerine ekleyin.

İlk gruplandırma esnek konteyner veya bu örnekteki ul ile ilgilidir.

ul { display: flex; } Bu her şeyi tek bir satırda toplar. Yön, varsayılan olarak satır halinde ve standart sıradadır.

ul {display: flex; flex-direction: X; } X = row, row-reverse, column, column-reverse Bu, elemanları alır ve onları tek bir satıra veya tek bir sütuna yerleştirir. Sıralama ya kaynak sırasına göre ya da kaynak sırasının tersidir. Esnek yön ana eksenimizi tanımlar.

ul { display: flex; flex-direction: : daha önce olduğu gibi, flex-wrap: X;} X = wrap, wrap-reverse, veya nowrap flex-direction tek tek öğeleri sipariş eder. flex-wrap oluşturulan satırları/sütunları sıralar.

ul { display: flex; flex-flow: X;}  flex-flow, flex-direction ve flex-wrap 'nin kısaltmasıdır Tıpkı bireysel özellikler gibi iki argüman alır. Örnek: row wrap, row-reverse wrap, column nowrap, column-reverse wrap-reverse, vb. Satır/sütun ters çevrilmiş olması sarmanın da ters çevrilmesi gerektiği anlamına gelmez

ul { display: flex; flex-flow: row wrap; justify-content: X; } X = flex-start, flex-end, center, space-between, space-around, space-evenly justify-content flex konteyner içindeki flex öğelerin ana eksendeki dağılımını yani genişliğe göre alanın nasıl tahsis edilmesi gerektiğini belirler. her bir öğenin? Esnek yön satır ise yatay ana eksendir. Esnek yön sütun olduğunda sütun ana eksen olur.

ul { display: flex; flex-flow: row wrap; justify-content: center; align-items: X} X  = flex-start, flex-end, center, baselinestretch Bu, öğelerimizi çapraz eksende hizalar. Şu anda bir satırla çalıştığımız için bu, öğeleri dikey alanda hizalamak anlamına geliyor.,

ul { display: flex; flex-flow: row wrap; justify-content: center; align-items: center; align-content: X} *X = flex-start, flex-end, center, space-between, space-around, space-evenly align-content değişikliğinin tüm kutuları ul'nin merkezine daha fazla hizalayacağına dikkat edin. Bu olmadan, kutular varsayılan olarak space-around ile dağıtılır.

Bir sonraki özellik grubu bireysel esnek öğelerle veya bu örnekteki li'lerle ilgilidir.

.flex2{ border: 2px dotted blue; order: X; } X bir tamsayı olabilir. 1 .flex2 kutularını listenin sonuna taşıyacak, -1 ise onları listenin başına taşıyacaktır. 0 nötrdür.

.flex2{ border:  2 piksel noktalı mavi; esnek temel: X; flex-basis genişliğe benzer ancak tam olarak aynı şey değildir. Genişlik mutlak bir ölçümdür; bir öğe her zaman bu kadar geniştir. Genişliği göreceli birimlerle ölçebiliriz (örneğin 250 piksel yerine %25), ancak sonuçta ölçümün kendisi asla değişmez. flex-basis için mevcut alanla belirli bir genişliğe ulaşmaya çalışıyoruz. Ekstra alana ve bunun nasıl dağıtılması gerektiğine bağlı olarak bu genişlikten daha küçük olabilir veya daha geniş olabilir. Ekstra alanın dağıtımı flex-grow ve flex-shrink (altta) tarafından kontrol edilir.


.flex2{ border:  2 piksel noktalı mavi; esnek büyüme: X; X, 0 veya pozitif bir tam sayı olabilir. (Negatif bir tamsayı ile bölünmez ancak hiçbir işe de yaramaz.) flex-grow, flex-shrink (aşağıda) gibi, her öğe sayfada görüntülendiğinde ekstra alan dağıtır. Bu örnekte esnek öğelerimiz ortaya hizalanmıştır (ul'da justify-content: center'e bakın). flex-grow öğesine bir değer atandığında, bu öğeye daha büyük bir oranda ekstra alan atanacak ve diğer öğelere göre daha büyük hale getirilecektir. Bu ölçümde herhangi bir birim bulunmadığını unutmayın; bu yalnızca bir orantıdır.

.flex2{ border: 2 piksel noktalı mavi; esnek-küçültme: X; X, 0 veya pozitif bir tam sayı olabilir. (Negatif bir tamsayı ile bölünmez ancak hiçbir işe de yaramaz.) flex-shrink öğeler küçüldükçe ekstra alana ne olacağını kontrol eder. Flex-shrink'e bir değer atadığınızda sayfada öğeler küçüldükçe bu öğe diğerlerinden daha hızlı küçülecektir. Bu ölçümde herhangi bir birim bulunmadığını unutmayın; bu yalnızca bir orantıdır.

.flex2{ border:  2 piksel noktalı mavi; esnek: GSB; G = flex-grow S = flex-shrink B = flex-basis Bu, flex-grow, flex-shrink ve flex-basis'yi birleştirmenin kısaltmasıdır.

 */